#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#include<string.h>
#define MAX_LINE 1024
#define ERROR -1
struct _member;
typedef struct member* position;
typedef struct _member {
	int number;
	position next;
}member;
int fileinput(char[MAX_LINE], float*);
int pop(position, float*);
int push(position, float*);
int check(position);
int main() {
	float result;
	float* res = &result;
	char filename[MAX_LINE];
	printf("Upisite ime datoteke iz koje zelite citati\n");
	scanf("%s", filename);
	fileinput(filename,res);
	if (res != NULL) {
		printf("Rezultat je %f", result);
	}
	else {
		printf("Neispravno postavljena jednadzba u datoteci");
	}
	return 0;
}
int fileinput(char filename[MAX_LINE],float* res) {
	FILE* fp = NULL;
	fp = fopen(filename, "r");
	member Top;
	Top.next = NULL;
	int n;
	float temp1=0;
	float temp2=0;
	float* tmp1 = &temp1;
	float* tmp2 = &temp2;
	char ctemp;
	char oper;
	float rez;
	float* res = &rez;;
	char* p = ctemp;
	fgets(ctemp, MAX_LINE, fp);
	while (strlen(p) > 0) {
		sscanf(p, "%d %n", fp);
		if (n == 1) {
			rez = (float)temp1;
			push(&Top,res);
		}
		else {
			oper = getc(fp);
			if (strcmp(oper, "+")) {
				pop(&Top, tmp1);
				pop(&Top, tmp2);
				rez = temp2 + temp1;
				push(&Top, res);
			}
			else if (strcmp(oper, "-")) {
				pop(&Top, tmp1);
				pop(&Top, tmp2);
				rez = temp2 - temp1;
				push(&Top, res);
			}
			else if (strcmp(oper, "*")) {
				pop(&Top, tmp1);
				pop(&Top, tmp2);
				rez = temp2 * temp1;
				push(&Top, res);
			}
			else if (strcmp(oper, "/")) {
				pop(&Top, tmp1);
				pop(&Top, tmp2);
				rez = temp2 / temp1;
				push(&Top, res);
			}
			else {
				printf("Nepoznata operacija u datoteci\n");
			}
		
		}
	}
	if (check(&Top)) {
		pop(&Top, tmp1);
		*res = temp1;
	}
	else {
		res = NULL;
	}
	return 0;
}
int pop(position p, float* temp) {
	*temp = p->number;
	p = p->next;
}
